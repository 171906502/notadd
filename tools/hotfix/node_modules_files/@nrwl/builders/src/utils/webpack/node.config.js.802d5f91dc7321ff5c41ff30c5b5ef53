'use strict';
Object.defineProperty(exports, '__esModule', { value: true });
var webpack_1 = require('webpack');
var mergeWebpack = require('webpack-merge');
var nodeExternals = require('webpack-node-externals');
var config_1 = require('./config');
var TerserPlugin = require('terser-webpack-plugin');
function getNodePartial(options) {
  var webpackConfig = {
    output: {
      libraryTarget: 'commonjs'
    },
    target: 'node',
    node: false
  };
  if (options.externalDependencies === 'all') {
    webpackConfig.externals = [
      nodeExternals({
        whitelist: [/^@notadd/]
      })
    ];
  } else if (Array.isArray(options.externalDependencies)) {
    webpackConfig.externals = [
      nodeExternals({
        whitelist: [/^@notadd/, ...options.externalDependencies]
      })
    ];
  }
  if (options.optimization) {
    webpackConfig.optimization = {
      minimize: true,
      minimizer: [
        new TerserPlugin({
          terserOptions: {
            keep_classnames: true,
            keep_fnames: true
          }
        })
      ],
      concatenateModules: true
    };
  }
  if (options.sourceMap) {
    webpackConfig.plugins = [
      new webpack_1.BannerPlugin({
        banner: 'require("source-map-support").install();',
        raw: true,
        entryOnly: false
      })
    ];
  }
  return webpackConfig;
}
function getNodeWebpackConfig(options) {
  return mergeWebpack([
    config_1.getBaseWebpackPartial(options),
    getNodePartial(options)
  ]);
}
exports.getNodeWebpackConfig = getNodeWebpackConfig;
